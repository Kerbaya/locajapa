/*
 * Copyright 2019 Kerbaya Software
 * 
 * This file is part of locajapa. 
 * 
 * locajapa is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * locajapa is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with locajapa.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.kerbaya.locajapa;

import java.util.Locale;
import java.util.Map;

import javax.persistence.EntityManager;

/**
 * Assembles all localized values for localizable entities into a map
 * 
 * @author Glenn.Lane@kerbaya.com
 *
 * @param <T>
 * The localizable type handled by this instance
 * 
 * @param <V>
 * The localized value handled by this instance
 */
public interface MapLoader<T, V>
{
	/**
	 * Creates a locale-value map for a provided localizable entity
	 * 
	 * @param localizable
	 * the localizable entity for which a map should be created
	 * 
	 * @return
	 * the locale-value map for the provided localizable.  Returns {@code null}
	 * if {@code localizable} was null
	 */
	Map<Locale, V> getMap(T localizable);
	
	
	/**
	 * Creates a locale-value map for a provided id of a localizable entity
	 * 
	 * @param localizable
	 * the localizable entity id for which a map should be created
	 * 
	 * @return
	 * the locale-value map for the provided localizable.  Returns {@code null}
	 * if {@code id} was null
	 */
	Map<Locale, V> getMapById(Object id);
	
	/**
	 * Populates all maps previously generated by this instance
	 * 
	 * @param em
	 * the entity manager associated to localizable entities previously provided
	 * to this instance
	 */
	void load(EntityManager em);
}
